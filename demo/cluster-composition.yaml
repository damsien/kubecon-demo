---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: crossplane-k8s-provider
rules:
- apiGroups: ["cluster.x-k8s.io"]
  resources: ["clusters"]
  verbs: ["create", "update", "patch", "get", "list", "watch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: crossplane-k8s-provider-binding
subjects:
- kind: Group
  name: system:serviceaccounts:crossplane-system
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: crossplane-k8s-provider
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: kubernetes.crossplane.io/v1alpha1
kind: ProviderConfig
metadata:
  name: kubernetes-provider
spec:
  credentials:
    source: InjectedIdentity
---
apiVersion: pkg.crossplane.io/v1
kind: Function
metadata:
  name: function-patch-and-transform
spec:
  package: xpkg.crossplane.io/crossplane-contrib/function-patch-and-transform:v0.8.2
---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata: 
  name: xcustomclusters.kubecon.demo
spec:
  defaultCompositeDeletePolicy: Foreground
  group: kubecon.demo
  names:
    kind: XCustomCluster
    plural: xcustomclusters
  claimNames:
    kind: CustomCluster
    plural: customclusters
  versions:
  - name: v1alpha1
    served: true
    referenceable: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              controlPlaneNumber:
                type: number
              workerNumber:
                type: number
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xcustomclusters.kubecon.demo
spec:
  compositeTypeRef:
    apiVersion: kubecon.demo/v1alpha1
    kind: XCustomCluster
  resources:
  - name: cluster-instance
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha2
      kind: Object
      metadata:
        name: custom-cluster
      spec:
        forProvider:
          manifest:
            apiVersion: cluster.x-k8s.io/v1beta1
            kind: Cluster
            metadata:
              labels:
                cni: cilium
            spec:
              clusterNetwork:
                pods:
                  cidrBlocks:
                  - 192.168.0.0/16
                serviceDomain: cluster.local
                services:
                  cidrBlocks:
                  - 10.128.0.0/12
              topology:
                class: quick-start
                controlPlane:
                  metadata: {}
                  replicas: 1
                variables:
                - name: imageRepository
                  value: ""
                - name: etcdImageTag
                  value: ""
                - name: coreDNSImageTag
                  value: ""
                - name: podSecurityStandard
                  value:
                    audit: restricted
                    enabled: true
                    enforce: baseline
                    warn: restricted
                version: v1.32.0
                workers:
                  machineDeployments:
                  - class: default-worker
                    name: md-0
                    replicas: 1
        managementPolicies:
          - '*'
        providerConfigRef:
          name: kubernetes-provider
    patches:
      - type: FromCompositeFieldPath
        fromFieldPath: spec.controlPlaneNumber
        toFieldPath: spec.forProvider.manifest.spec.topology.replicas
      - type: FromCompositeFieldPath
        fromFieldPath: spec.workerNumber
        toFieldPath: spec.forProvider.manifest.spec.topology.workers.machineDeployments[0].replicas
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.labels[crossplane.io/claim-namespace]
        toFieldPath: spec.forProvider.manifest.metadata.namespace
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.labels[crossplane.io/claim-name]
        toFieldPath: spec.forProvider.manifest.metadata.name

